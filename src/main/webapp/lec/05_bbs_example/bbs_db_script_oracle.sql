-- Hello

-- drop tables
DROP TABLE db_file_log ;
DROP TABLE db_file ;
DROP TABLE article_reply ;
DROP TABLE article ;
DROP TABLE board ;

DROP TABLE user_access_log ;
DROP TABLE USERS ;
DROP TABLE CODE ;
DROP TABLE SYS_PROP ;

-- sys prop

CREATE TABLE SYS_PROP (
	prop_key  VARCHAR(255) ,
	VALUE     VARCHAR(255) ,
	value_int INT ,
	value_dbl NUMBER ,
	PRIMARY KEY ( prop_KEY, VALUE )
) ;

-- code

CREATE TABLE CODE (
	p_code_id   VARCHAR(255) ,
	code_id     VARCHAR(255) PRIMARY KEY ,
	text_value  VARCHAR(255),
	num_value   NUMBER ,
	ord INT
) ;

-- user

CREATE TABLE USERS (
	user_id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	user_name      VARCHAR(255) NOT NULL,
	email          VARCHAR(255) NOT NULL ,
	passwd         VARCHAR(255) ,
	phone_no       VARCHAR(255) ,
	last_login_dt  TIMESTAMP  ,
	last_logout_dt TIMESTAMP ,
	role_code_id   VARCHAR(255) DEFAULT 1 NOT NULL
) ;

-- insert user
INSERT INTO users( user_name, email , passwd ) VALUES
( 'admin', 'admin@gmail.com', 'a' ) ;
INSERT INTO users( user_name, email , passwd ) VALUES
( 'john', 'john@gmail.com', 'a' ) ;

-- SELECT * FROM user ;

-- user access log

CREATE TABLE user_access_log (
	user_access_log_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	user_id            INT REFERENCES USERS(user_id) ,
	login_dt           TIMESTAMP ,
	logout_dt          TIMESTAMP
) ;

-- board

CREATE TABLE board(
	board_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	board_user_id INT REFERENCES users( user_id ),
	board_name VARCHAR( 255 ) UNIQUE ,
	up_dt TIMESTAMP ,
	deleted INT DEFAULT 0 NOT NULL
) ;

-- insert board
INSERT INTO board ( board_name, board_user_id ) VALUES ( 'Notice', 1 );
INSERT INTO board ( board_name, board_user_id ) VALUES ( 'Free' , 2 ) ;

SELECT * FROM board ;

-- article
CREATE TABLE article (
	board_id INT REFERENCES board( board_id ) ,
	article_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	article_user_id INT REFERENCES users( user_id ) ,
	is_notice INT DEFAULT 0 NOT NULL ,
	title VARCHAR(255) ,
	content VARCHAR(4000) ,
	content_type VARCHAR(255) DEFAULT 'txt' NOT NULL ,
	view_count INT DEFAULT 0 NOT NULL ,
	up_dt TIMESTAMP ,
	deleted INT DEFAULT 0 NOT NULL
) ;

-- insert sample article data

INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 1, 1, 1, 'abcd', 'abcd efg' ) ;
INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 1, 2, 1, 'abcd def', 'abcd efg gjgi' ) ;
INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 1, 2, 0, 'abcd asdf', 'sd absd cd efg' ) ;
INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 1, 1, 0, 'abcd asdf asdf', 'sd abcd efg' ) ;

INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 2, 1, 1, 'abcd', 'abcd efg' ) ;
INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 2, 2, 1, 'abcd def', 'abcd efg gjgi' ) ;
INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 2, 1, 0, 'abcd asdf', 'sd absd cd efg' ) ;
INSERT INTO article( board_id , article_user_id, is_notice, title, content ) VALUES
( 2, 2, 0, 'abcd asdf asdf', 'sd abcd efg' ) ;

SELECT * FROM article ;

SELECT b.board_id, article_id, article_user_id, p.board_name, user_name,
title, content, view_count, a.up_dt
FROM
board p
LEFT JOIN board b ON ( p.board_id = b.board_id )
LEFT JOIN article a ON ( b.board_id = a.board_id )
LEFT JOIN users u ON( a.article_user_id = u.user_id )
;

-- Lee Dong Su Code

-- article_replay

CREATE TABLE ARTICLE_REPLY (
	ARTICLE_ID		INT	REFERENCES ARTICLE( article_id ),
	REPLY_USER_ID 	INT REFERENCES users ( user_id ),
	REPLY_ID 		INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	CONTENT 			VARCHAR(255) NOT NULL  ,
	UP_DT				TIMESTAMP DEFAULT sysdate
) ;

-- db_file

CREATE TABLE DB_FILE (
	FILE_ID		INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	GUBUN_CODE	VARCHAR(255),
	FILE_NO		INT ,
	FILE_NAME 	VARCHAR(255),
	FILE_PATH 	VARCHAR(255),
	CONTENT 	   BLOB ,
	UP_USER_ID 	INT REFERENCES users ( user_id ) ,
	UP_DT 		TIMESTAMP ,
	DELETED 	   INT DEFAULT 0 NOT NULL
) ;

-- db_file_log
CREATE TABLE DB_FILE_LOG(
	FILE_LOG_ID	INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILE_ID		INT REFERENCES DB_FILE ( FILE_ID ),
	USER_ID		INT REFERENCES users ( user_id ),
	FILE_SIZE 	INT default 0 NOT NULL  ,
	IP_ADDR 	VARCHAR(255) ,
	DNLD_RESULT INT DEFAULT 0 NOT NULL
) ;

-- Good bye!
